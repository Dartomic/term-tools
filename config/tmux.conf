# vim: fdm=marker

# Settings {{{

# basic settings
set-window-option -g xterm-keys on # for vim
set-window-option -g mode-keys vi # vi key
set-window-option -g monitor-activity on

# 256 colors
set -g default-terminal "screen-256color"

# UTF8
set-option -g   status-utf8 on

# Start numbering windows at 1
set -g base-index 1

# More history
set -g history-limit 10000

# This is necessary for vim to work properly
set-option -sg escape-time 0

# Rename windows
setw -g automatic-rename

# Set window notifications
setw -g monitor-activity off
set -g visual-activity off

# Better resizing
setw -g aggressive-resize on

# Show messages for slightly longer
set-option display-time 1000

# Sane scrolling
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# }}}

# Keybindings {{{

# vim bindings
setw -g mode-keys vi
setw -g status-keys vi

# copy-mode
bind Escape copy-mode
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection #\; run "tmux show-buffer | xclip -selection clipboard -i"
bind -t vi-copy r rectangle-toggle # rectangular selection
bind -t vi-copy Escape cancel
bind p   paste-buffer
bind C-p paste-buffer

# tmux clipboard --> X windows
bind   y run "tmux show-buffer | xclip -i"
bind C-y run "tmux show-buffer | xclip -i"

# X windows clipboard --> tmux
# Disabled since we can always use ctrl+shift+v on Ubuntu and cmd+v on Mac
# and it's too easy to clobber the tmux clipboard just after copy-mode
#bind C-p run "xclip -o | tmux load-buffer - ; tmux paste-buffer"

# Use C-a instead of C-b
unbind C-a
unbind C-b
set -g prefix C-a
bind-key a send-prefix

# Navigate panes with hjkl
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Navigate windows with hl
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Vim-style mappings -- n new, c close, v vert-split, s horiz-split
# Also don't require that you let go of ctrl
bind c   confirm-before "kill-pane"
bind C-c confirm-before "kill-pane"
bind n   new-window
bind C-n new-window
bind v   split-window -h
bind C-v split-window -h
bind s   split-window
bind C-s split-window

# Reload config file
bind r   source-file ~/.tmux.conf\; display "reloaded ~/.tmux.conf"
bind C-r source-file ~/.tmux.conf\; display "reloaded ~/.tmux.conf"

# Get to the last active window
bind-key C-a last-window

# Move current window to Top position
bind t   swap-window -t 1
bind C-t swap-window -t 1

# Move window to position
bind m   command-prompt -p "move window to:"  "swap-window -t '%%'"
bind C-m command-prompt -p "move window to:"  "swap-window -t '%%'"

# Mouse interaction
set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

## NOTE: commented out since it conflicts with C-m for move
## Toggle mouse on with ^a m
#bind m \
  #set -g mode-mouse on \;\
  #set -g mouse-resize-pane on \;\
  #set -g mouse-select-pane on \;\
  #set -g mouse-select-window on \;\
  #display 'Mouse: ON'
## Toggle mouse off with ^a M
#bind M \
  #set -g mode-mouse off \;\
  #set -g mouse-resize-pane off \;\
  #set -g mouse-select-pane off \;\
  #set -g mouse-select-window off \;\
  #display 'Mouse: OFF'

# }}}

# status bar {{{

set -g status-left '#[fg=cyan]#h'
set-window-option -g status-bg black
set-window-option -g window-status-current-bg black
set-window-option -g window-status-current-format '#[fg=yellow][#I]#[fg=yellow] #W'
set-window-option -g window-status-format '#[fg=brightgreen][#I]#[fg=brightgreen] #W'

# }}}
